---
version: "1.3.0"

clusterName: "cluster.local"

autoscaler: true

# By default, this is points at the docker hub artifacts
registry:
  cnc: "azul"
  dockerhubMirror: ""

simpleSizing:
  # Total number of vCores that will be allocated to the CNC service.
  # This does NOT include resources required by monitoring!
  # The sizing formula in the templates will allocate individual
  # CNC infrastructure components to best utilize given resources.
  # The default number is the amount of vCores necessary to start
  # one replica of each CNC component, so that the service is operational.
  vCores: 18
  # minVCores and maxVCores has the same formula as vCores, but applied
  # when autoscaling is enabled.
  minVCores: 18
  # Default max is to allocate 10 compile brokers.
  maxVCores: 81

  # Do not change these values unless you change the required CNC k8s pod sizing.
  relationships:
    brokersPerGateway: 30
    brokersPerCache: 20

ssl:
  enabled: false
  value:
    cert: ""
    key: ""
  path:
    cert: "cert.pem"
    key: "key.pem"
  secretName: ""
  mtls:
    enabled: false
    truststore: "client-truststore.p12"
    password: "pass"

monitoring:
  # This enables deployment of the monitoring stack - Prometheus + Grafana.
  # More specific settings for both further down.
  enabled: false

compilations:
  parallelism:
    # Maximum concurrent compilation limit per VM (VMs will not send more than this amount at the same time).
    limitPerVm: 50
    # Maximum amount of parallel compiler engine processes running at the same time per compile broker.
    limitPerCompileBroker: 50

###################################################################################################
# The rest of the settings are for reference only. You should not override any of these settings. #
###################################################################################################
storage:
  replicas: 1
  accesskey: "minio"
  secretkey: "minio123"
  resources:
    requests:
      cpu: "1"
      memory: "24Gi"
      ephemeral-storage: "32Gi"
    limits:
      # Do not use non-numerical values such as 200m, otherwise the templating logic will break.
      cpu: "1"
      memory: "24Gi"
      ephemeral-storage: "200Gi"
  # nodeSelector: {}

gateway:
  replicas: 1
  autoscaler:
    enabled: true
    min: 1
    max: 10
  resources:
    requests:
      # Do not use non-numerical values such as 200m, otherwise the templating logic will break.
      cpu: "2"
      memory: "5Gi"
      ephemeral-storage: "1Gi"
  # nodeSelector: {}
  service:
    type: "NodePort"
    # annotations: {}

compileBroker:
  replicas: 1
  autoscaler:
    enabled: true
    min: 1
    max: 10
  resources:
    requests:
      # Do not use non-numerical values such as 200m, otherwise the templating logic will break.
      cpu: "7"
      ephemeral-storage: "8Gi"
  # nodeSelector: {}

cache:
  version: "4.2"
  replicas: 1
  autoscaler:
    enabled: true
    min: 1
    max: 3
  resources:
    requests:
      # Do not use non-numerical values such as 200m, otherwise the templating logic will break.
      cpu: "7"
      memory: "20Gi"
  # nodeSelector: {}

db:
  version: "10.5.12"
  replicas: 1
  username: "username"
  password: "password"
  resources:
    requests:
      # Do not use non-numerical values such as 200m, otherwise the templating logic will break.
      cpu: "1"
      memory: "2Gi"
      ephemeral-storage: "8Gi"
  # nodeSelector: {}

grafana:
  fullnameOverride: grafana
  service:
    type: NodePort
  grafana.ini:
    auth.anonymous:
      enabled: true
      org_role: Admin
    auth:
      disable_login_form: true
  sidecar:
    # configmaps labeled with 'grafana_dashboard: "1"' will be auto-added
    dashboards:
      enabled: true
    # configmaps labeled with 'grafana_datasource: "1"' will be auto-added
    datasources:
      enabled: true
  # nodeSelector: {}

prometheus:
  # nodeSelector: {}

test: false