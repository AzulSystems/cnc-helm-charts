---
version: "1.6.2"

clusterName: "cluster.local"

autoscaler: true

# By default, this is points at the docker hub artifacts
registry:
  cnc: "azul"
  dockerhubMirror: ""

imagePullPolicy: "IfNotPresent"

simpleSizing:
  # Total number of vCores that will be allocated to the CNC service.
  # This does NOT include resources required by monitoring!
  # The sizing formula in the templates will allocate individual
  # CNC infrastructure components to best utilize given resources.
  # The default number is the amount of vCores necessary to start
  # one replica of each CNC component, so that the service is operational.
  vCores: 29
  # minVCores and maxVCores has the same formula as vCores, but applied
  # when autoscaling is enabled.
  minVCores: 29
  # Default max is to allocate 10 compile brokers.
  maxVCores: 92

  # Do not change these values unless you change the required CNC pod sizing.
  relationships:
    brokersPerGateway: 30
    brokersPerCache: 20

secrets:
  db:
    username: "username"
    password: "password"
  storage:
    accesskey: "minio"
    secretkey: "minio123"

ssl:
  enabled: false
  value:
    cert: ""
    key: ""
  path:
    cert: "cert.pem"
    key: "key.pem"
  secretName: ""
  mtls:
    enabled: false
    truststore: "client-truststore.p12"
    password: "pass"

monitoring:
  # This enables deployment of the monitoring stack - Prometheus + Grafana.
  # More specific settings for both further down.
  enabled: false

compilations:
  parallelism:
    # Maximum concurrent compilation limit per VM (VMs will not send more than this amount at the same time).
    limitPerVm: 500
    # Maximum amount of parallel compiler engine processes running at the same time per compile broker.
    limitPerCompileBroker: 30

#################################################################################
# The rest of the settings are only to show you the values used internally.     #
# Changing the values below will not have any affect on your CNC cluster.       #
#################################################################################
storage:
  replicas: 1
  resources:
    requests:
      cpu: "1"
      memory: "24Gi"
      ephemeral-storage: "32Gi"
    limits:
      # Do not use non-numerical values such as 200m, otherwise the templating logic will break.
      cpu: "1"
      memory: "24Gi"
      ephemeral-storage: "200Gi"
  nodeSelector:
    kubernetes.io/arch: amd64
  # when using persistent data volume make sure to lower ephemeral-storage allocation
  persistentDataVolume:
    enabled: false
    size: "200Gi"
    storageClassName: "" # empty string uses default storage class

gateway:
  replicas: 1
  autoscaler:
    enabled: true
    min: 1
    max: 10
  resources:
    requests:
      # Do not use non-numerical values such as 200m, otherwise the templating logic will break.
      cpu: "7"
      memory: "14Gi"
      ephemeral-storage: "1Gi"
    limits:
      cpu: "7"
      memory: "14Gi"
      ephemeral-storage: "1Gi"
  nodeSelector:
    kubernetes.io/arch: amd64
  service:
    type: "NodePort"
    httpEndpoint:
      enabled: false
      port: 8080
    grpc:
      port: 50051
    # annotations: {}

compileBroker:
  replicas: 1
  autoscaler:
    enabled: true
    min: 1
    max: 10
  resources:
    requests:
      # Do not use non-numerical values such as 200m, otherwise the templating logic will break.
      cpu: "7"
      memory: "28Gi"
      ephemeral-storage: "8Gi"
    limits:
      cpu: "7"
      memory: "28Gi"
      ephemeral-storage: "8Gi"
  nodeSelector:
    kubernetes.io/arch: amd64

cache:
  replicas: 1
  autoscaler:
    enabled: true
    min: 1
    max: 3
  resources:
    requests:
      # Do not use non-numerical values such as 200m, otherwise the templating logic will break.
      cpu: "7"
      memory: "28Gi"
    limits:
      cpu: "7"
      memory: "28Gi"
  nodeSelector:
    kubernetes.io/arch: amd64

db:
  version: "10.5.12"
  replicas: 1
  resources:
    requests:
      # Do not use non-numerical values such as 200m, otherwise the templating logic will break.
      cpu: "7"
      memory: "28Gi"
      ephemeral-storage: "200Gi"
    limits:
      # Do not use non-numerical values such as 200m, otherwise the templating logic will break.
      cpu: "7"
      memory: "28Gi"
      ephemeral-storage: "200Gi"
  nodeSelector:
    kubernetes.io/arch: amd64
  # when using persistent data volume make sure to lower ephemeral-storage allocation
  persistentDataVolume:
    enabled: false
    size: "200Gi"
    storageClassName: "" # empty string uses default storage class

operator:
  timeToClearOptimizationBacklog: 120s
  nodeSelector:
    kubernetes.io/arch: amd64

grafana:
  fullnameOverride: grafana
  service:
    type: NodePort
  grafana.ini:
    auth.anonymous:
      enabled: true
      org_role: Admin
    auth:
      disable_login_form: true
  sidecar:
    # configmaps labeled with 'grafana_dashboard: "1"' will be auto-added
    dashboards:
      enabled: true
    # configmaps labeled with 'grafana_datasource: "1"' will be auto-added
    datasources:
      enabled: true
  nodeSelector:
    kubernetes.io/arch: amd64

prometheus:
  nodeSelector:
    kubernetes.io/arch: amd64

test: false
